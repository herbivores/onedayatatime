<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Palleschitz</title>
    <link>https://palleschitz.netlify.app/</link>
    <description>Recent content on Palleschitz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://palleschitz.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2021</title>
      <link>https://palleschitz.netlify.app/2021/01/03/2021-01-03-2021/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/2021/01/03/2021-01-03-2021/</guid>
      <description># Get stock pairsstock_prices &amp;lt;- c(&amp;quot;AAPL&amp;quot;, &amp;quot;MA&amp;quot;, &amp;quot;V&amp;quot;) %&amp;gt;%tq_get(get = &amp;quot;stock.prices&amp;quot;,from = &amp;quot;2018-01-01&amp;quot;,to = &amp;quot;2020-12-31&amp;quot;) %&amp;gt;%group_by(symbol) stock_pairs &amp;lt;- stock_prices %&amp;gt;%tq_transmute(select = adjusted,mutate_fun = periodReturn,period = &amp;quot;daily&amp;quot;,type = &amp;quot;log&amp;quot;,col_rename = &amp;quot;returns&amp;quot;) %&amp;gt;%spread(key = symbol, value = returns)We can visualize the relationship between the returns of the stock pairs like so.
stock_pairs %&amp;gt;%ggplot(aes(x = AAPL, y = MA)) +geom_point(color = palette_light()[[1]], alpha = 0.</description>
    </item>
    
    <item>
      <title>Best R Hugo Blogdown Site End to End Tutorial</title>
      <link>https://palleschitz.netlify.app/2020/12/25/2020-12-25/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/2020/12/25/2020-12-25/</guid>
      <description>Best R Hugo Blogdown Site End to End Tutorialhttps://www.youtube.com/watch?v=9Jqvaoeh1W4
Hugo Blogdown Site using R/RStudio and hosted for free using Github and Netlify for continuous integration, continuous deployment website.
CradleToGraveR
</description>
    </item>
    
    <item>
      <title>My awesome project</title>
      <link>https://palleschitz.netlify.app/project/my-awesome-project/</link>
      <pubDate>Tue, 18 Nov 2014 02:13:50 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/project/my-awesome-project/</guid>
      <description>About project Aenean ipsum justo, semper eu nisl ut, pretium tincidunt sem. Praesent et diam sit amet lacus lobortis dictum a id lacus. Quisque hendrerit sit amet turpis eu varius. Ut id lorem ac felis ultrices tincidunt. Pellentesque consequat arcu ac fringilla imperdiet. Phasellus pellentesque, sapien non pulvinar blandit, sapien ante aliquet felis, vel porttitor sapien ante in lacus. Fusce non urna aliquet, malesuada nibh vel, luctus urna. Phasellus ut lacus molestie, varius purus quis, malesuada lorem.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://palleschitz.netlify.app/2014/09/28/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 02:13:50 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/2014/09/28/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://palleschitz.netlify.app/2014/04/02/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/2014/04/02/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://palleschitz.netlify.app/2014/04/02/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/2014/04/02/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://palleschitz.netlify.app/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/page/about/</guid>
      <description>About Be well, so simple to say and so challenging to live it.
School I enjoy my life today, one day at a time.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://palleschitz.netlify.app/page/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://palleschitz.netlify.app/page/contact/</guid>
      <description>Contact mail : ztihcs[at]gmail.com</description>
    </item>
    
  </channel>
</rss>
